#summary Adding the ALA theme to a new project

= `ala-web-theme` Grails plugin =

The `ala-web-theme` Grails plugin provides the following features to a Grails app:

  * a default Sitemesh layout with ALA header & footer (including CSS, JS and images resources)
  * a default index page for the webapp
  * CAS support for auth.ala.org.au integration (including libs and web.xml additions)

----

== Get started ==

 * Create a blank Grails app (substituting in your new project name):

{{{
grails createApp TestApp
}}}

 * cd to !TestApp
 * Edit `grails-app/conf/BuildConfig.groovy`
 * Add to the repositories sections

{{{ 
    repositories { 
    ...
        mavenRepo "http://maven.ala.org.au/repository/"  
    ...
}
}}}

 * Add the plugin as runtime e.g. (check the latest version via [http://maven.ala.org.au/repository/org/grails/plugins/ala-web-theme/ maven repo])

{{{
    plugins {
        ...
        runtime ":ala-web-theme:0.1.12"  
    }
}}}

 * Add the following standard block to the top of your Config.groovy, replacing the appName and ENV_NAME values to suit your app.

{{{

/******************************************************************************\
 *  CONFIG MANAGEMENT
\******************************************************************************/
def appName = 'userdetails'
def ENV_NAME = "${appName.toUpperCase()}_CONFIG"
def default_config = "/data/${appName}/config/${appName}-config.properties"
if(!grails.config.locations || !(grails.config.locations instanceof List)) {
    grails.config.locations = []
}

// add ala skin conf (needed for version >= 0.1.10)
//grails.config.locations.add("classpath:ala-config.groovy")

if(System.getenv(ENV_NAME) && new File(System.getenv(ENV_NAME)).exists()) {
    println "[${appName}] Including configuration file specified in environment: " + System.getenv(ENV_NAME);
    grails.config.locations.add "file:" + System.getenv(ENV_NAME)
} else if(System.getProperty(ENV_NAME) && new File(System.getProperty(ENV_NAME)).exists()) {
    println "[${appName}] Including configuration file specified on command line: " + System.getProperty(ENV_NAME);
    grails.config.locations.add "file:" + System.getProperty(ENV_NAME)
} else if(new File(default_config).exists()) {
    println "[${appName}] Including default configuration file: " + default_config;
    grails.config.locations.add "file:" + default_config
} else {
    println "[${appName}] No external configuration file defined."
}

println "[${appName}] (*) grails.config.locations = ${grails.config.locations}"

}}}

 * Add the following block for CAS security (required):

{{{

/******************************************************************************\
 *  SECURITY
\******************************************************************************/
if (!security.cas.uriFilterPattern) {
    security.cas.uriFilterPattern = ""
}
if (!security.cas.loginUrl) {
    security.cas.loginUrl = "https://auth.ala.org.au/cas/login"
}
if (!security.cas.logoutUrl) {
    security.cas.logoutUrl = "https://auth.ala.org.au/cas/logout"
}
if (!security.apikey.serviceUrl) {
    security.apikey.serviceUrl = "http://auth.ala.org.au/apikey/ws/check?apikey="
}
if(!security.cas.appServerName){
    security.cas.appServerName = "http://devt.ala.org.au:8080"
}
if(!security.cas.casServerName){
    security.cas.casServerName = "https://auth.ala.org.au"
}
if(!security.cas.uriExclusionFilterPattern){
    security.cas.uriExclusionFilterPattern = '/images.*,/css.*,/js.*,/less.*'
}
if(!security.cas.authenticateOnlyIfLoggedInPattern){
    security.cas.authenticateOnlyIfLoggedInPattern = "" // pattern for pages that can optionally display info about the logged-in user
}
if(!security.cas.casServerUrlPrefix){
    security.cas.casServerUrlPrefix = 'https://auth.ala.org.au/cas'
}
if(!security.cas.bypass){
    security.cas.bypass = false
}
/******************************************************************************/

}}}

 * Use the bootstrap layout

{{{
mv grails-app/views/layouts/main.gsp.new grails-app/views/layouts/main.gsp
}}}

 * Run the app via the built-in tomcat:

{{{
grails run-app
}}} 

and as the Grails output suggests, browse to http://localhost:8080/testApp.

Check http://maven.ala.org.au/repository/org/grails/plugins/ala-web-theme/ for the latest version of this plugin.